{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","placeholder","value","onChange","event","target","backgroundColor","newText","showAlert","split","join","document","getElementById","select","navigator","clipboard","writeText","length","propsTypes","PropTypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Navbar_Navbar","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4de90c86.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n       let lower = word.toLowerCase();\r\n      return  lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Navbar.css';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.about}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <ul className=\"darkThemes\" >\r\n          <li id=\"red\" ></li>\r\n          <li id=\"blue\" ></li>\r\n          <li id=\"green\" ></li>\r\n          <li id=\"yellow\" ></li>\r\n        </ul>\r\n        <div className=\"form-check form-switch mx-4\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n          <label className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault \">{props.mode === \"dark\" ? \"disable dark Mode\" : \"Enable Dark Mode\"}</label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propsTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"title here\",\r\n  about: \"About here\",\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUPClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\", \"success\");\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n  }\r\n\r\n  const handleRemoveExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n    // console.log(text);\r\n  }\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <><div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myBox\" className=\"form-label\"><h2 style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>{props.heading}</h2></label>\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" placeholder=\"Enter your text here\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }}></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUPClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleRemoveExtraSpace}>Remove Extra Spaces</button>\r\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy text</button>\r\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear text</button>\r\n    </div>\r\n      <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n        <h2 className='my-3'>Your text summary</h2>\r\n        <p>{text.split(\" \").length - 1} Words and {text.length} Characters</p>\r\n        <p>{0.008 * `${text.split(\" \").length - 1}`} Minute for read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length > 0 ? text : \"Enter Somthing in text-box to preview\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Alert from './components/Alert';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"dark\") {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Dark Mode is disabled\", \"success\");\r\n      document.title = \"TextUtils-Light mode\"\r\n    } else {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#2a335a\";\r\n      showAlert(\"Dark Mode is enabled\", \"success\")\r\n      document.title = \"TextUtils-Dark mode\"\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar title=\"TextUtils\" about=\"About us\" mode={mode} toggleMode={toggleMode} />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        <TextForm heading=\"Enter the text for analyze\" mode={mode} showAlert={showAlert} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}